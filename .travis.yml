# To increase travis available disk size
sudo: required

language: python

python:
  - "3.5"

services:
  - docker

cache:
  directories:
    - $HOME/.cache/pip
    - /home/travis/docker-cache

env:
  SSL_KEY: nginx.key
  SSL_CERT: nginx.crt
  LETSENCRYPT: false
  DOCKER_CACHE_DIR: /home/travis/docker-cache
  DOCKER_REGISTRY_NAMESPACE: rtbot
  DOCKER_REGISTRY_HOST: docker.io
  DOCKER_REGISTRY_LOGIN:
  DOCKER_REGISTRY_PASSWORD:

before_install:
  - pip install docker-compose==1.9.0
  - openssl req -x509 -nodes -days 365 -newkey rsa:2048 -subj "/C=US/ST=Test/L=Test/O=Dis/CN=localhost" -keyout "etc/ssl/${SSL_KEY}" -out "etc/ssl/${SSL_CERT}"
  - mkdir -p "$DOCKER_CACHE_DIR"
  - du -sh "$DOCKER_CACHE_DIR"
  - |
      echo "Loading docker containers from cache..."
      for DOCKER_CACHE_FILE in "$DOCKER_CACHE_DIR"/*; do
        if [ -f "$DOCKER_CACHE_FILE" ]; then
          echo "Loading docker container ${DOCKER_CACHE_FILE} in background..."
          gunzip -c "${DOCKER_CACHE_FILE}" | docker load &
        fi
        echo "Waiting for background processes..."
        wait
      done

install:
  - pip install -r ci/requirements.txt
  - docker-compose build

before_script:
  - docker-compose up -d

script:
  - set -e
  - echo "Waiting nginx-bot to launch on nginx-bot:443..."
  - while ! wget --no-check-certificate https://localhost/ping &> /dev/null; do sleep 1; done
  - echo "Waiting 30 seconds to ensure if all bots are ready..."; sleep 30
  - BOT_BASE_URL="https://localhost" python ci/run_bot_tests.py .
  - docker-compose kill &
  - |
      if [ "$TRAVIS_BRANCH" = "master" ] && [ "$TRAVIS_PULL_REQUEST" == "false" ]; then
        docker login \
          --username "$DOCKER_REGISTRY_LOGIN" \
          --password "$DOCKER_REGISTRY_PASSWORD" \
          "$DOCKER_REGISTRY_HOST"
        rm -rf "${DOCKER_CACHE_DIR}/*"
        echo "Dumping docker containers to cache..."
        docker images -q "${DOCKER_REGISTRY_NAMESPACE}/*" | \
        while read image; do
            echo "Dumping image ${image} in background..."
            docker save $(docker history -q ${image} | grep -v '<missing>') | gzip > "$image.tar.gz" && docker rmi "$image" &
        done
      fi
  - echo "Waiting for background processes..."; wait
  - du -h "$DOCKER_CACHE_DIR"
  - ls -h "$DOCKER_CACHE_DIR"
