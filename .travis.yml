language: python

python:
  - "3.5"

services:
  - docker

cache:
  directories:
    - $HOME/.cache/pip
    - /home/travis/docker

env:
  SSL_KEY: nginx.key
  SSL_CERT: nginx.crt
  LETSENCRYPT: false
  DOCKER_CACHE_FILE: /home/travis/docker/cache.tar.gz
  DOCKER_REGISTRY_HOST: docker.io
  DOCKER_REGISTRY_LOGIN:
  DOCKER_REGISTRY_PASSWORD:

before_install:
  - pip install docker-compose==1.9.0
  - openssl req -x509 -nodes -days 365 -newkey rsa:2048 -subj "/C=US/ST=Test/L=Test/O=Dis/CN=localhost" -keyout "etc/ssl/${SSL_KEY}" -out "etc/ssl/${SSL_CERT}"
  - if [ -f ${DOCKER_CACHE_FILE} ]; then gunzip -c ${DOCKER_CACHE_FILE} | docker load; fi

install:
  - pip install -r ci/requirements.txt
  - docker-compose build

before_script:
  - docker-compose up -d

script:
  - set -e
  - echo "Waiting nginx-bot to launch on nginx-bot:443..."
  - while ! wget --no-check-certificate https://localhost/ping &> /dev/null; do sleep 1; done
  - echo "Waiting 30 seconds to ensure if all bots are ready..."; sleep 30
  - BOT_BASE_URL="https://localhost" python ci/run_bot_tests.py .
  - |
      if [ "$TRAVIS_BRANCH" = "master" ] && [ "$TRAVIS_PULL_REQUEST" == "false" ]; then
        docker login \
          --username "$DOCKER_REGISTRY_LOGIN" \
          --password "$DOCKER_REGISTRY_PASSWORD" \
          "$DOCKER_REGISTRY_HOST"
        docker-compose push
        mkdir -p $(dirname ${DOCKER_CACHE_FILE})
        docker save $(docker history -q ${DOCKER_REPOSITORY}:${TRAVIS_COMMIT} | grep -v '<missing>') | gzip > ${DOCKER_CACHE_FILE}
      fi

after_script:
  - docker-compose down
